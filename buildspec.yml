version: 0.2
env:
  variables:
    REGION: s-east-1
  parameter-store:
    PS_AWS_ACCESS_KEY_ID: /prod/aws_access_key_id
    PS_AWS_SECRET_ACCESS_KEY: /prod/aws_secret_access_key
    GIT_TOKEN: /prod/git/token
phases:
  install:
    commands:
      - echo "Install aws cli and boto3 "
      - apt-get update
      - apt-get install -y awscli
      - pip install boto3
  pre_build:
    commands:
#      - echo Can use AWS CLI ACCESS KEY and PASSWORD , but its not best practice
#      - export AWS_ACCESS_KEY_ID=$PS_AWS_ACCESS_KEY_ID
#      - export AWS_SECRET_ACCESS_KEY=$PS_AWS_SECRET_ACCESS_KEY
#      - aws s3 ls --region us-east-1
#      - echo not using above technique
      - echo Entered the pre_build phase...
      - echo Assuming Role using assume python script
      - python assume
  build:
    commands:
      - echo creating cloudformation template if it fails it tries to update the same in finally block
      - aws cloudformation create-stack --stack-name CS-VPC --template-body file://infrastructure/infrastructure.vpc.yml --region=$REGION --profile=prod       
      - aws cloudformation wait stack-create-complete --stack-name CS-VPC --region=$REGION --profile=prod       
      - aws cloudformation create-stack --stack-name CS-IAM --template-body file://infrastructure/infrastructure.iam.yml --capabilities=CAPABILITY_IAM   --region=$REGION --profile=prod 
      - aws cloudformation wait stack-create-complete --stack-name CS-IAM --region=$REGION --profile=prod             
      - aws cloudformation create-stack --stack-name CS-SG --template-body file://infrastructure/infrastructure.securitygroup.yml --region=$REGION --profile=prod       
      - aws cloudformation wait stack-create-complete --stack-name CS-SG --region=$REGION --profile=prod                   
      - aws cloudformation create-stack --stack-name CS-ECS-CLUSTER --template-body file://infrastructure/infrastructure.ecs.cluster.yml --region=$REGION --profile=prod 
      - aws cloudformation wait stack-create-complete --stack-name CS-ECS-CLUSTER --region=$REGION --profile=prod                         
      - aws cloudformation create-stack --stack-name CS-ECS-SERVICE --template-body file://infrastructure/infrastructure.ecs.service.plus.yml --region=$REGION --profile=prod 
      - aws cloudformation wait stack-create-complete --stack-name CS-ECS-SERVICE --region=$REGION --profile=prod                               
      - aws ssm put-parameter --name "/prod/git/token" --type "String" --value $GIT_TOKEN --overwrite --region=$REGION --profile=prod
      - aws ssm put-parameter --name "/prod/aws_access_key_id" --type "String" --value $PS_AWS_ACCESS_KEY_ID --overwrite --region=$REGION 
      - aws ssm put-parameter --name "/prod/aws_secret_access_key" --type "String" --value $PS_AWS_SECRET_ACCESS_KEY --overwrite --region=$REGION 
      - aws ssm put-parameter --name "/prod/aws_account_id" --type "String" --value $PROD_AWS_ACCOUNT_ID --overwrite --region=$REGION 
      - aws ssm put-parameter --name "/prod/ecr_repo_name" --type "String" --value $PROD_ECR_REPO_NAME --overwrite --region=$REGION 
      - aws ecr create-repository --repository-name $PROD_ECR_REPO_NAME --region=$REGION


  post_build:
    commands:
      - echo Entered the post_build phase...
      
